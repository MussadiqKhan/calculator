{"version":3,"sources":["calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","_useState","useState","_useState2","Object","slicedToArray","num","setNum","handleClick","e","target","value","calculateOperations","splice","toConsumableArray","console","log","item","concat","result","join","math","precision","react_default","a","createElement","className","onClick","label","App","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.606f8092.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport * as math from \"mathjs\";\r\n\r\nfunction Calculator() {\r\n  const [num, setNum] = useState([]);\r\n  const handleClick = e => {\r\n    const value = e.target.value;\r\n    switch (value) {\r\n      case \"C\":\r\n        setNum([]);\r\n        break;\r\n      case \"=\":\r\n        calculateOperations();\r\n        break;\r\n      case \"t\":\r\n        let nums = num.splice(-1, 1);\r\n        setNum(num => [...num]);\r\n        console.log(num);\r\n        break;\r\n      default:\r\n        const item = e.target.value;\r\n        setNum(num => [...num, item]);\r\n        break;\r\n    }\r\n  };\r\n  const calculateOperations = () => {\r\n    let result = num.join(\"\");\r\n    if (result) {\r\n      result = math.evaluate(result);\r\n      result = math.format(result, { precision: 14 });\r\n      setNum(num => [...result]);\r\n      console.log(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calculator\">\r\n      <div className=\"screen\">{num}</div>\r\n      <div className=\"keypad\">\r\n        <div className=\"keypoad1\">\r\n          <button onClick={handleClick} label=\"1\" value=\"1\">\r\n            1\r\n          </button>\r\n          <button onClick={handleClick} label=\"2\" value=\"2\">\r\n            2\r\n          </button>\r\n          <button onClick={handleClick} label=\"3\" value=\"3\">\r\n            3\r\n          </button>\r\n          <button className=\"plus\" onClick={handleClick} label=\"3\" value=\"+\">\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"keypoad1\">\r\n          <button onClick={handleClick} value=\"4\">\r\n            4\r\n          </button>\r\n          <button onClick={handleClick} value=\"5\">\r\n            5\r\n          </button>\r\n          <button onClick={handleClick} label=\"6\" value=\"6\">\r\n            6\r\n          </button>\r\n          <button className=\"minus\" onClick={handleClick} label=\"1\" value=\"-\">\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className=\"keypoad1\">\r\n          <button onClick={handleClick} label=\"1\" value=\"7\">\r\n            7\r\n          </button>\r\n          <button onClick={handleClick} label=\"1\" value=\"8\">\r\n            8\r\n          </button>\r\n          <button onClick={handleClick} label=\"1\" value=\"9\">\r\n            9\r\n          </button>\r\n          <button className=\"mult\" onClick={handleClick} label=\"1\" value=\"*\">\r\n            *\r\n          </button>\r\n        </div>\r\n        <div className=\"keypoad1\">\r\n          <button onClick={handleClick} label=\"1\" value=\"0\">\r\n            0\r\n          </button>\r\n          <button onClick={handleClick} label=\"1\" value=\".\">\r\n            .\r\n          </button>\r\n          <button onClick={handleClick} label=\"1\" value=\"C\">\r\n            C\r\n          </button>\r\n          <button className=\"div\" onClick={handleClick} label=\"1\" value=\"/\">\r\n            /\r\n          </button>\r\n        </div>\r\n        <div className=\"keypoad1\">\r\n          <button onClick={handleClick} label=\"1\" value=\"t\">\r\n            &larr;\r\n          </button>\r\n          <button className=\"equal\" onClick={handleClick} label=\"1\" value=\"=\">\r\n            =\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./calculator\";\nimport Screen from \"./screen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}